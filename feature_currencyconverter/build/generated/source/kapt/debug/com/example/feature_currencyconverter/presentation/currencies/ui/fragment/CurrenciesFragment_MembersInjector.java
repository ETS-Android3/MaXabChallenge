// Generated by Dagger (https://dagger.dev).
package com.example.feature_currencyconverter.presentation.currencies.ui.fragment;

import com.example.core.di.ViewModelFactory;
import com.example.feature_currencyconverter.presentation.currencies.viewmodel.CurrenciesViewModel;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrenciesFragment_MembersInjector implements MembersInjector<CurrenciesFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelFactory<CurrenciesViewModel>> currenciesViewModelFactoryProvider;

  public CurrenciesFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelFactory<CurrenciesViewModel>> currenciesViewModelFactoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.currenciesViewModelFactoryProvider = currenciesViewModelFactoryProvider;
  }

  public static MembersInjector<CurrenciesFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelFactory<CurrenciesViewModel>> currenciesViewModelFactoryProvider) {
    return new CurrenciesFragment_MembersInjector(androidInjectorProvider, currenciesViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(CurrenciesFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectCurrenciesViewModelFactory(instance, currenciesViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.feature_currencyconverter.presentation.currencies.ui.fragment.CurrenciesFragment.currenciesViewModelFactory")
  public static void injectCurrenciesViewModelFactory(CurrenciesFragment instance,
      ViewModelFactory<CurrenciesViewModel> currenciesViewModelFactory) {
    instance.currenciesViewModelFactory = currenciesViewModelFactory;
  }
}
