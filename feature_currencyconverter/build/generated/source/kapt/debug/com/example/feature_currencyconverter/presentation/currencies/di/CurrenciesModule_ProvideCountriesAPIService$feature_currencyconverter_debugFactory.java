// Generated by Dagger (https://dagger.dev).
package com.example.feature_currencyconverter.presentation.currencies.di;

import com.example.feature_currencyconverter.data.remote.service.CountriesAPIService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrenciesModule_ProvideCountriesAPIService$feature_currencyconverter_debugFactory implements Factory<CountriesAPIService> {
  private final CurrenciesModule module;

  private final Provider<Retrofit.Builder> retrofitProvider;

  public CurrenciesModule_ProvideCountriesAPIService$feature_currencyconverter_debugFactory(
      CurrenciesModule module, Provider<Retrofit.Builder> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CountriesAPIService get() {
    return provideCountriesAPIService$feature_currencyconverter_debug(module, retrofitProvider.get());
  }

  public static CurrenciesModule_ProvideCountriesAPIService$feature_currencyconverter_debugFactory create(
      CurrenciesModule module, Provider<Retrofit.Builder> retrofitProvider) {
    return new CurrenciesModule_ProvideCountriesAPIService$feature_currencyconverter_debugFactory(module, retrofitProvider);
  }

  public static CountriesAPIService provideCountriesAPIService$feature_currencyconverter_debug(
      CurrenciesModule instance, Retrofit.Builder retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideCountriesAPIService$feature_currencyconverter_debug(retrofit));
  }
}
