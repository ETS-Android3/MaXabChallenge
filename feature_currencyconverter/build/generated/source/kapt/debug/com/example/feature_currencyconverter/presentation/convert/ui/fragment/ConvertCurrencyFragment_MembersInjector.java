// Generated by Dagger (https://dagger.dev).
package com.example.feature_currencyconverter.presentation.convert.ui.fragment;

import com.example.core.di.ViewModelFactory;
import com.example.feature_currencyconverter.presentation.convert.viewmodel.ConvertCurrencyViewModel;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ConvertCurrencyFragment_MembersInjector implements MembersInjector<ConvertCurrencyFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelFactory<ConvertCurrencyViewModel>> convertViewModelFactoryProvider;

  public ConvertCurrencyFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelFactory<ConvertCurrencyViewModel>> convertViewModelFactoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.convertViewModelFactoryProvider = convertViewModelFactoryProvider;
  }

  public static MembersInjector<ConvertCurrencyFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelFactory<ConvertCurrencyViewModel>> convertViewModelFactoryProvider) {
    return new ConvertCurrencyFragment_MembersInjector(androidInjectorProvider, convertViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(ConvertCurrencyFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectConvertViewModelFactory(instance, convertViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.feature_currencyconverter.presentation.convert.ui.fragment.ConvertCurrencyFragment.convertViewModelFactory")
  public static void injectConvertViewModelFactory(ConvertCurrencyFragment instance,
      ViewModelFactory<ConvertCurrencyViewModel> convertViewModelFactory) {
    instance.convertViewModelFactory = convertViewModelFactory;
  }
}
