// Generated by Dagger (https://dagger.dev).
package com.example.feature_currencyconverter.data;

import com.example.feature_currencyconverter.data.local.CountriesDao;
import com.example.feature_currencyconverter.data.remote.service.CountriesAPIService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrenciesRepositoryImpl_Factory implements Factory<CurrenciesRepositoryImpl> {
  private final Provider<CountriesAPIService> countriesAPIServiceProvider;

  private final Provider<CountriesDao> countriesDaoProvider;

  public CurrenciesRepositoryImpl_Factory(Provider<CountriesAPIService> countriesAPIServiceProvider,
      Provider<CountriesDao> countriesDaoProvider) {
    this.countriesAPIServiceProvider = countriesAPIServiceProvider;
    this.countriesDaoProvider = countriesDaoProvider;
  }

  @Override
  public CurrenciesRepositoryImpl get() {
    return newInstance(countriesAPIServiceProvider.get(), countriesDaoProvider.get());
  }

  public static CurrenciesRepositoryImpl_Factory create(
      Provider<CountriesAPIService> countriesAPIServiceProvider,
      Provider<CountriesDao> countriesDaoProvider) {
    return new CurrenciesRepositoryImpl_Factory(countriesAPIServiceProvider, countriesDaoProvider);
  }

  public static CurrenciesRepositoryImpl newInstance(CountriesAPIService countriesAPIService,
      CountriesDao countriesDao) {
    return new CurrenciesRepositoryImpl(countriesAPIService, countriesDao);
  }
}
