// Generated by Dagger (https://dagger.dev).
package com.example.feature_currencyconverter.data;

import com.example.feature_currencyconverter.data.local.CurrenciesDao;
import com.example.feature_currencyconverter.data.remote.service.CurrenciesAPIService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrenciesRepositoryImpl_Factory implements Factory<CurrenciesRepositoryImpl> {
  private final Provider<CurrenciesAPIService> currenciesAPIServiceProvider;

  private final Provider<CurrenciesDao> currenciesDaoProvider;

  public CurrenciesRepositoryImpl_Factory(
      Provider<CurrenciesAPIService> currenciesAPIServiceProvider,
      Provider<CurrenciesDao> currenciesDaoProvider) {
    this.currenciesAPIServiceProvider = currenciesAPIServiceProvider;
    this.currenciesDaoProvider = currenciesDaoProvider;
  }

  @Override
  public CurrenciesRepositoryImpl get() {
    return newInstance(currenciesAPIServiceProvider.get(), currenciesDaoProvider.get());
  }

  public static CurrenciesRepositoryImpl_Factory create(
      Provider<CurrenciesAPIService> currenciesAPIServiceProvider,
      Provider<CurrenciesDao> currenciesDaoProvider) {
    return new CurrenciesRepositoryImpl_Factory(currenciesAPIServiceProvider, currenciesDaoProvider);
  }

  public static CurrenciesRepositoryImpl newInstance(CurrenciesAPIService currenciesAPIService,
      CurrenciesDao currenciesDao) {
    return new CurrenciesRepositoryImpl(currenciesAPIService, currenciesDao);
  }
}
